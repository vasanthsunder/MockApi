swagger: "2.0"
info:
  version: "0.0.1"
  title: Sensity Parking APIs
  description: Sensity Parking APIs 
# during dev, should point to your local machine
host: 0.0.0.0:10010
# basePath prefixes all resource paths 
basePath: /
#
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json

tags:
  - name: PolicyTag
    # description: Policy Tag Controller

  - name: ParkingPolicy
    # description: Parking Policy Controller

  - name: GroupPolicy
    # description: Group Policy Controller

  - name: ParkingSpots
    # description: Parking Spots Controller   

paths:
  # Get, Update, Delete  a specific policy category
  /customers/{orgid}/sites/{siteid}/tags/{tagid}:
    x-swagger-router-controller: policy_tag
    # Get a policy tag
    get:
      tags: 
        - PolicyTag
      summary: Get a specific policy tag in a site
      description: Get a specific policy tag in a site
      operationId: getTag
      parameters:
        - name: orgid
          in: path
          description: The org ID
          required: true
          type: string
        - name: siteid
          in: path
          description: The site ID
          required: true
          type: string
        - name: tagid
          in: path
          description: The policy tag ID
          required: true
          type: string        
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GetTagResponse" 
        "401":
          description: Unauthorized to access report
          schema:
            $ref: "#/definitions/ErrorResponse"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "405":
          description: Method Not Allowed
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "502":
          description: Bad Gateway
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: Service Unavailable
          schema:
            $ref: "#/definitions/ErrorResponse"
        "504":
          description: Gateway Timeout
          schema:
            $ref: "#/definitions/ErrorResponse"
        "408":
          description: Request Timedout
          schema:
            $ref: "#/definitions/ErrorResponse"     

    # Delete a policy tag
    delete:
      tags: 
        - PolicyTag
      summary: Delete a policy tag in a site
      description: Delete a policy tag in a site
      operationId: deleteTag
      parameters:
        - name: orgid
          in: path
          description: The customer ID
          required: true
          type: string
        - name: siteid
          in: path
          description: The site ID
          required: true
          type: string
        - name: tagid
          in: path
          description: The policy tag ID
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/DeleteTagResponse"
        "401":
          description: Unauthorized to access report
          schema:
            $ref: "#/definitions/ErrorResponse"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "405":
          description: Method Not Allowed
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "502":
          description: Bad Gateway
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: Service Unavailable
          schema:
            $ref: "#/definitions/ErrorResponse"
        "504":
          description: Gateway Timeout
          schema:
            $ref: "#/definitions/ErrorResponse"
        "408":
          description: Request Timedout
          schema:
            $ref: "#/definitions/ErrorResponse"
    
    # Update a policy tag
    put:
      tags: 
        - PolicyTag
      summary: Update a policy tag
      description: Update a policy tag
      operationId: updateTag
      parameters:
        - name: orgid
          in: path
          description: The customer ID
          required: true
          type: string
        - name: siteid
          in: path
          description: The site ID
          required: true
          type: string
        - name: tagid
          in: path
          description: The policy tag ID
          required: true
          type: string
        - name: tag
          in: body
          description: Updated a policy tag
          required: true
          schema:
            $ref: "#/definitions/NewTag"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UpdateTagResponse"
        "401":
          description: Unauthorized to access report
          schema:
            $ref: "#/definitions/ErrorResponse"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "405":
          description: Method Not Allowed
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "502":
          description: Bad Gateway
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: Service Unavailable
          schema:
            $ref: "#/definitions/ErrorResponse"
        "504":
          description: Gateway Timeout
          schema:
            $ref: "#/definitions/ErrorResponse"
        "408":
          description: Request Timedout
          schema:
            $ref: "#/definitions/ErrorResponse" 

  # Create, get all Policy category in a site
  /customers/{orgid}/sites/{siteid}/tags:
    x-swagger-router-controller: policy_tag

    # Create a policy tag
    post:
      tags: 
        - PolicyTag
      summary: Create a policy tag in a site
      description: Create a policy tag in a site
      operationId: postTag
      parameters:
        - name: orgid
          in: path
          description: The org ID
          required: true
          type: string
        - name: siteid
          in: path
          description: The site ID
          required: true
          type: string
        - name: tag
          in: body
          description: New Policy Tag Details
          required: true
          schema:
            $ref: "#/definitions/NewTag"
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/PostTagResponse"
        "401":
          description: Unauthorized to access report
          schema:
            $ref: "#/definitions/ErrorResponse"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "405":
          description: Method Not Allowed
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "502":
          description: Bad Gateway
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: Service Unavailable
          schema:
            $ref: "#/definitions/ErrorResponse"
        "504":
          description: Gateway Timeout
          schema:
            $ref: "#/definitions/ErrorResponse"
        "408":
          description: Request Timedout
          schema:
            $ref: "#/definitions/ErrorResponse"    
    
    # Get all policy tags
    get:
      tags: 
        - PolicyTag
      summary: Get all policy tags in a site
      description: Get all policy tags in a site
      operationId: getAllTags
      parameters:
        - name: orgid
          in: path
          description: The org ID
          required: true
          type: string
        - name: siteid
          in: path
          description: The site ID
          required: true
          type: string              
      responses:
        "200":
          description: Success
          schema:
            type: array
            items: 
              # a pointer to a definition
              $ref: "#/definitions/GetAllTagsResponse"
        "401":
          description: Unauthorized to access report
          schema:
            $ref: "#/definitions/ErrorResponse"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "405":
          description: Method Not Allowed
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "502":
          description: Bad Gateway
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: Service Unavailable
          schema:
            $ref: "#/definitions/ErrorResponse"
        "504":
          description: Gateway Timeout
          schema:
            $ref: "#/definitions/ErrorResponse"
        "408":
          description: Request Timedout
          schema:
            $ref: "#/definitions/ErrorResponse"

   # Get, Update, Delete  a specific parking policy
  /customers/{orgid}/sites/{siteid}/parkingpolicies/{parkingpolicyid}:
    x-swagger-router-controller: parking_policy
    # Get a parking policy 
    get:
      tags:
        - ParkingPolicy
      summary: Get a parking policy in a site
      description: Get a specific parking policy in a site
      operationId: getParkingPolicy
      parameters:
        - name: orgid
          in: path
          description: The org ID
          required: true
          type: string
        - name: siteid
          in: path
          description: The site ID
          required: true
          type: string
        - name: parkingpolicyid
          in: path
          description: The parking policy ID
          required: true
          type: string        
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GetParkingPolicyResponse"
        "401":
          description: Unauthorized to access report
          schema:
            $ref: "#/definitions/ErrorResponse"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "405":
          description: Method Not Allowed
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "502":
          description: Bad Gateway
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: Service Unavailable
          schema:
            $ref: "#/definitions/ErrorResponse"
        "504":
          description: Gateway Timeout
          schema:
            $ref: "#/definitions/ErrorResponse"
        "408":
          description: Request Timedout
          schema:
            $ref: "#/definitions/ErrorResponse"

    # Delete a policy category
    delete:
      tags:
        - ParkingPolicy
      summary: Delete a parking policy in a site
      description: Delete a parking policy in a site
      operationId: deleteParkingPolicy
      parameters:
        - name: orgid
          in: path
          description: The customer ID
          required: true
          type: string
        - name: siteid
          in: path
          description: The site ID
          required: true
          type: string
        - name: parkingpolicyid
          in: path
          description: The parking policy ID
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/DeleteParkingPolicyResponse"
        "401":
          description: Unauthorized to access report
          schema:
            $ref: "#/definitions/ErrorResponse" 
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse" 
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/ErrorResponse" 
        "405":
          description: Method Not Allowed
          schema:
            $ref: "#/definitions/ErrorResponse" 
        "500":
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse" 
        "502":
          description: Bad Gateway
          schema:
            $ref: "#/definitions/ErrorResponse" 
        "503":
          description: Service Unavailable
          schema:
            $ref: "#/definitions/ErrorResponse" 
        "504":
          description: Gateway Timeout
          schema:
            $ref: "#/definitions/ErrorResponse" 
        "408":
          description: Request Timedout
          schema:
            $ref: "#/definitions/ErrorResponse" 

    # Update a parking policy
    put:
      tags:
        - ParkingPolicy
      summary: Update a parking policy
      description: Update a parking policy
      operationId: updateParkingPolicy
      parameters:
        - name: orgid
          in: path
          description: The customer ID
          required: true
          type: string
        - name: siteid
          in: path
          description: The site ID
          required: true
          type: string
        - name: parkingpolicyid
          in: path
          description: The parking policy ID
          required: true
          type: string
        - name: policy
          in: body
          description: Updated a parking policy
          required: true
          schema:
            $ref: "#/definitions/NewParkingPolicy"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UpdateParkingPolicyResponse"
        "401":
          description: Unauthorized to access report
          schema:
            $ref: "#/definitions/ErrorResponse"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "405":
          description: Method Not Allowed
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "502":
          description: Bad Gateway
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: Service Unavailable
          schema:
            $ref: "#/definitions/ErrorResponse"
        "504":
          description: Gateway Timeout
          schema:
            $ref: "#/definitions/ErrorResponse"
        "408":
          description: Request Timedout
          schema:
            $ref: "#/definitions/ErrorResponse" 

   # Create, get all parking policy in a site
  /customers/{orgid}/sites/{siteid}/parkingpolicies:
    x-swagger-router-controller: parking_policy

    # Create a parking policy
    post:
      tags:
        - ParkingPolicy
      summary: Create a parking policy in a site
      description: Create a parking policy in a site
      operationId: createParkingPolicy
      parameters:
        - name: orgid
          in: path
          description: The org ID
          required: true
          type: string
        - name: siteid
          in: path
          description: The site ID
          required: true
          type: string
        - name: policy
          in: body
          description: New Parking Policy Details          
          schema:
            $ref: "#/definitions/NewParkingPolicy"
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/CreateParkingPolicyResponse"
        "401":
          description: Unauthorized to access report
          schema:
            $ref: "#/definitions/ErrorResponse"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "405":
          description: Method Not Allowed
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "502":
          description: Bad Gateway
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: Service Unavailable
          schema:
            $ref: "#/definitions/ErrorResponse"
        "504":
          description: Gateway Timeout
          schema:
            $ref: "#/definitions/ErrorResponse"
        "408":
          description: Request Timedout
          schema:
            $ref: "#/definitions/ErrorResponse"  

    # Get all parking policies
    get:
      tags:
        - ParkingPolicy
      summary: Get all parking policies in a site
      description: Get all parking policies in a site
      operationId: getAllParkingPolicies
      parameters:
        - name: orgid
          in: path
          description: The org ID
          required: true
          type: string
        - name: siteid
          in: path
          description: The site ID
          required: true
          type: string              
      responses:
        "200":
          description: Success
          schema:
            type: array
            items: 
              # a pointer to a definition
              $ref: "#/definitions/GetAllParkingPoliciesResponse"
        "401":
          description: Unauthorized to access report
          schema:
            $ref: "#/definitions/ErrorResponse"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "405":
          description: Method Not Allowed
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "502":
          description: Bad Gateway
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: Service Unavailable
          schema:
            $ref: "#/definitions/ErrorResponse"
        "504":
          description: Gateway Timeout
          schema:
            $ref: "#/definitions/ErrorResponse"
        "408":
          description: Request Timedout
          schema:
            $ref: "#/definitions/ErrorResponse"  

    # Group-Policy Assocation in a site
  /customers/{orgid}/sites/{siteid}/parkingpolicies/{parkingpolicyid}/associatedparkinggroups:
    x-swagger-router-controller: group_policy

    # Associate a group-policy
    put:
      tags:
        - GroupPolicy
      summary: Associate a group policy in a site
      description: Associate a group-policy in a site
      operationId: policyassociation
      parameters:
        - name: orgid
          in: path
          description: The org ID
          required: true
          type: string
        - name: siteid
          in: path
          description: The site ID
          required: true
          type: string
        - name: parkingpolicyid
          in: path
          description: The policy ID
          required: true
          type: string
        - name: grouppolicy
          in: body
          description: Associating Group Policy Details
          required: true
          schema:
            $ref: "#/definitions/GroupPolicy"
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/AssociateGroupPolicyResponse"
        "401":
          description: Unauthorized to access report
          schema:
            $ref: "#/definitions/ErrorResponse"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "405":
          description: Method Not Allowed
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "502":
          description: Bad Gateway
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: Service Unavailable
          schema:
            $ref: "#/definitions/ErrorResponse"
        "504":
          description: Gateway Timeout
          schema:
            $ref: "#/definitions/ErrorResponse"
        "408":
          description: Request Timedout
          schema:
            $ref: "#/definitions/ErrorResponse" 

    # Deassociate a group-policy
    delete:
      tags:
        - GroupPolicy
      summary: Deassociate a group policy in a site
      description: Deassociate a group-policy in a site
      operationId: policydisassociation
      parameters:
        - name: orgid
          in: path
          description: The org ID
          required: true
          type: string
        - name: siteid
          in: path
          description: The site ID
          required: true
          type: string
        - name: parkingpolicyid
          in: path
          description: The policy ID
          required: true
          type: string
        - name: grouppolicy
          in: body
          description: Deassociating Group Policy Details
          required: true
          schema:
            $ref: "#/definitions/GroupPolicy"
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/DeassociateGroupPolicyResponse"
        "401":
          description: Unauthorized to access report
          schema:
            $ref: "#/definitions/ErrorResponse"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "405":
          description: Method Not Allowed
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "502":
          description: Bad Gateway
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: Service Unavailable
          schema:
            $ref: "#/definitions/ErrorResponse"
        "504":
          description: Gateway Timeout
          schema:
            $ref: "#/definitions/ErrorResponse"
        "408":
          description: Request Timedout
          schema:
            $ref: "#/definitions/ErrorResponse" 

     # Group-Policy based on version in a site
  /customers/{orgid}/sites/{siteid}/parkingpolicies/{parkingpolicyid}/version/{version}:
    x-swagger-router-controller: parking_policy

    # Get a group-policy based on version
    get:
      tags:
        - ParkingPolicy
      summary: Get a parking policy in a site
      description: Get a specific parking policy in a site
      operationId: getPolicyByVersionNumber
      parameters:
        - name: orgid
          in: path
          description: The org ID
          required: true
          type: string
        - name: siteid
          in: path
          description: The site ID
          required: true
          type: string
        - name: parkingpolicyid
          in: path
          description: The parking policy ID
          required: true
          type: string
        - name: version
          in: path
          description: The version Number
          required: true
          type: integer    
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GetParkingPolicyResponseByVersion"
        "401":
          description: Unauthorized to access report
          schema:
            $ref: "#/definitions/ErrorResponse"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "405":
          description: Method Not Allowed
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "502":
          description: Bad Gateway
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: Service Unavailable
          schema:
            $ref: "#/definitions/ErrorResponse"
        "504":
          description: Gateway Timeout
          schema:
            $ref: "#/definitions/ErrorResponse"
        "408":
          description: Request Timedout
          schema:
            $ref: "#/definitions/ErrorResponse" 

     # Group-Policy based on versionhistory of a site
  /customers/{orgid}/sites/{siteid}/parkingpolicies/{parkingpolicyid}/versionhistory:
    x-swagger-router-controller: parking_policy

    # Get a group-policy based on versionhistory
    get:
      tags:
        - ParkingPolicy
      summary: Get a parking policy in a site
      description: Get a specific parking policy in a site
      operationId: getPolicyVersionHistory
      parameters:
        - name: orgid
          in: path
          description: The org ID
          required: true
          type: string
        - name: siteid
          in: path
          description: The site ID
          required: true
          type: string
        - name: parkingpolicyid
          in: path
          description: The parking policy ID
          required: true
          type: string   
      responses:
        "200":
          description: Success
          schema:
            type: array
            items: 
              # a pointer to a definition
              $ref: "#/definitions/GetParkingPolicyResponseByVersionHistory"
        "401":
          description: Unauthorized to access report
          schema:
            $ref: "#/definitions/ErrorResponse"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "405":
          description: Method Not Allowed
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "502":
          description: Bad Gateway
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: Service Unavailable
          schema:
            $ref: "#/definitions/ErrorResponse"
        "504":
          description: Gateway Timeout
          schema:
            $ref: "#/definitions/ErrorResponse"
        "408":
          description: Request Timedout
          schema:
            $ref: "#/definitions/ErrorResponse"  

      # Group-Policy based on from and to timestamps of a site
  /customers/{orgid}/sites/{siteid}/parkinggroups/{parkinggroupid}/activepolicies/fromtime/{fromtime}/totime/{totime}:
    x-swagger-router-controller: parking_policy

    # Get a group-policy based on timestamps
    get:
      tags:
        - ParkingPolicy
      summary: Get a parking policy of a site within timeline
      description: Get a specific parking policy of a site within timeline
      operationId: getActivePoliciesWithInTimeline
      parameters:
        - name: orgid
          in: path
          description: The org ID
          required: true
          type: string
        - name: siteid
          in: path
          description: The site ID
          required: true
          type: string
        - name: parkinggroupid
          in: path
          description: The Parking Group ID
          required: true
          type: string
        - name: fromtime
          in: path
          description: The From Time
          required: true
          type: string 
        - name: totime
          in: path
          description: The To Time
          required: true
          type: string    
      responses:
        "200":
          description: Success
          schema:
            type: array
            items: 
              # a pointer to a definition
              $ref: "#/definitions/GetParkingPolicyResponseByTimeline"
        "401":
          description: Unauthorized to access report
          schema:
            $ref: "#/definitions/ErrorResponse"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "405":
          description: Method Not Allowed
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "502":
          description: Bad Gateway
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: Service Unavailable
          schema:
            $ref: "#/definitions/ErrorResponse"
        "504":
          description: Gateway Timeout
          schema:
            $ref: "#/definitions/ErrorResponse"
        "408":
          description: Request Timedout
          schema:
            $ref: "#/definitions/ErrorResponse"

     # Active group-policies will be retrieved 
  /customers/{orgid}/sites/{siteid}/parkinggroups/{parkinggroupid}/activepolicy:
    x-swagger-router-controller: parking_policy

    # Get a group-policy based on timestamps
    get:
      tags:
        - ParkingPolicy
      summary: Get a active parking policy in a ite
      description: Get a specific active parking policy 
      operationId: getActivePolicy
      parameters:
        - name: orgid
          in: path
          description: The org ID
          required: true
          type: string
        - name: siteid
          in: path
          description: The site ID
          required: true
          type: string
        - name: parkinggroupid
          in: path
          description: The Parking Group ID
          required: true
          type: string   
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetActivePolicies"
        "401":
          description: Unauthorized to access report
          schema:
            $ref: "#/definitions/ErrorResponse" 
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse" 
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/ErrorResponse" 
        "405":
          description: Method Not Allowed
          schema:
            $ref: "#/definitions/ErrorResponse" 
        "500":
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse" 
        "502":
          description: Bad Gateway
          schema:
            $ref: "#/definitions/ErrorResponse" 
        "503":
          description: Service Unavailable
          schema:
            $ref: "#/definitions/ErrorResponse" 
        "504":
          description: Gateway Timeout
          schema:
            $ref: "#/definitions/ErrorResponse" 
        "408":
          description: Request Timedout
          schema:
            $ref: "#/definitions/ErrorResponse" 

     # Search For Parking Policy
  /customers/{orgid}/sites/{siteid}/parkingpolicies/actions/search:
    x-swagger-router-controller: parking_policy

    # Post to search for parking policy
    post:
      tags:
        - ParkingPolicy
      summary: Post to search parking policies
      description: Post To Search parking policy 
      operationId: postToSearchPolicy
      parameters:
        - name: orgid
          in: path
          description: The org ID
          required: true
          type: string
        - name: siteid
          in: path
          description: The site ID
          required: true
          type: string
        - name: searchpolicy
          in: body
          description: Search For A Parking Policy
          required: true
          schema:
            $ref: "#/definitions/SearchParkingPolicy" 
      responses:
        "200":
          description: Success
          schema:
            type: array
            items: 
              # a pointer to a definition
              $ref: "#/definitions/PostSearchResponse"
        "401":
          description: Unauthorized to access report
          schema:
            $ref: "#/definitions/ErrorResponse" 
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse" 
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/ErrorResponse" 
        "405":
          description: Method Not Allowed
          schema:
            $ref: "#/definitions/ErrorResponse" 
        "500":
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse" 
        "502":
          description: Bad Gateway
          schema:
            $ref: "#/definitions/ErrorResponse" 
        "503":
          description: Service Unavailable
          schema:
            $ref: "#/definitions/ErrorResponse" 
        "504":
          description: Gateway Timeout
          schema:
            $ref: "#/definitions/ErrorResponse" 
        "408":
          description: Request Timedout
          schema:
            $ref: "#/definitions/ErrorResponse" 

     # GetAll, Create  a specific parking spot
  /customers/{orgid}/sites/{siteid}/parkingspots/spotattributes:
    x-swagger-router-controller: parking_spots

    # Get all parking spot's metadata in a parking group
    get:
      tags:
        - ParkingSpots
      summary: Get all parking spot's metadata in a parking group
      description: Get all parking spot's metadata in a parking group
      operationId: getAllParkingSpots
      parameters:
        - name: orgid
          in: path
          description: The org ID
          required: true
          type: string
        - name: siteid
          in: path
          description: The site ID
          required: true
          type: string              
      responses:
        "200":
          description: Success
          schema:
            type: array
            items: 
              # a pointer to a definition
              $ref: "#/definitions/GetAllParkingSpotsResponse"
        "401":
          description: Unauthorized to access report
          schema:
            $ref: "#/definitions/ErrorResponse"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "405":
          description: Method Not Allowed
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "502":
          description: Bad Gateway
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: Service Unavailable
          schema:
            $ref: "#/definitions/ErrorResponse"
        "504":
          description: Gateway Timeout
          schema:
            $ref: "#/definitions/ErrorResponse"
        "408":
          description: Request Timedout
          schema:
            $ref: "#/definitions/ErrorResponse" 

    # Create a parking spot
    post:
      tags:
        - ParkingSpots
      summary: Create metadata for parking spot in a parking group
      description: Create metadata for parking spot in a parking group
      operationId: postParkingSpot
      parameters:
        - name: orgid
          in: path
          description: The org ID
          required: true
          type: string
        - name: siteid
          in: path
          description: The site ID
          required: true
          type: string
        - name: parkingSpot
          in: body
          description: Parking Spot Details
          required: true
          schema:
            $ref: "#/definitions/ParkingSpotDetails"
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/PostParkingSpotResponse"
        "401":
          description: Unauthorized to access report
          schema:
            $ref: "#/definitions/ErrorResponse"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "405":
          description: Method Not Allowed
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "502":
          description: Bad Gateway
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: Service Unavailable
          schema:
            $ref: "#/definitions/ErrorResponse"
        "504":
          description: Gateway Timeout
          schema:
            $ref: "#/definitions/ErrorResponse"
        "408":
          description: Request Timedout
          schema:
            $ref: "#/definitions/ErrorResponse" 

     # Get, Update, Delete  a specific parking spot
  /customers/{orgid}/sites/{siteid}/parkingspots/{parkingspotid}/spotattributes:
    x-swagger-router-controller: parking_spots
    # Get a parking spot 
    get:
      tags:
        - ParkingSpots
      summary: Get a parking spot metadata in a parking group
      description: Get a parking spot metadata in a parking group
      operationId: getParkingSpot
      parameters:
        - name: orgid
          in: path
          description: The org ID
          required: true
          type: string
        - name: siteid
          in: path
          description: The site ID
          required: true
          type: string
        - name: parkingspotid
          in: path
          description: The parking spot ID
          required: true
          type: string        
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GetParkingSpotResponse"
        "401":
          description: Unauthorized to access report
          schema:
            $ref: "#/definitions/ErrorResponse"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "405":
          description: Method Not Allowed
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "502":
          description: Bad Gateway
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: Service Unavailable
          schema:
            $ref: "#/definitions/ErrorResponse"
        "504":
          description: Gateway Timeout
          schema:
            $ref: "#/definitions/ErrorResponse"
        "408":
          description: Request Timedout
          schema:
            $ref: "#/definitions/ErrorResponse" 

    # Update a parking spot metadata in a parking group 
    put:
      tags:
        - ParkingSpots
      summary: Update a parking spot metadata in a parking group
      description: Update a parking spot metadata in a parking group
      operationId: updateParkingSpot
      parameters:
        - name: orgid
          in: path
          description: The org ID
          required: true
          type: string
        - name: siteid
          in: path
          description: The site ID
          required: true
          type: string
        - name: parkingspotid
          in: path
          description: The parking spot ID
          required: true
          type: string
        - name: parkingSpot
          in: body
          description: Parking Spot Details
          required: true
          schema:
            $ref: "#/definitions/ParkingSpotDetails"         
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/UpdateParkingSpotResponse"
        "401":
          description: Unauthorized to access report
          schema:
            $ref: "#/definitions/ErrorResponse"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "405":
          description: Method Not Allowed
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "502":
          description: Bad Gateway
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: Service Unavailable
          schema:
            $ref: "#/definitions/ErrorResponse"
        "504":
          description: Gateway Timeout
          schema:
            $ref: "#/definitions/ErrorResponse"
        "408":
          description: Request Timedout
          schema:
            $ref: "#/definitions/ErrorResponse" 

    # Delete a parking spot metadata in a parking group 
    delete:
      tags:
        - ParkingSpots
      summary: Delete a parking spot metadata in a parking group
      description: Delete a parking spot metadata in a parking group
      operationId: deleteParkingSpot
      parameters:
        - name: orgid
          in: path
          description: The org ID
          required: true
          type: string
        - name: siteid
          in: path
          description: The site ID
          required: true
          type: string
        - name: parkingspotid
          in: path
          description: The parking spot ID
          required: true
          type: string       
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/DeleteParkingSpotResponse"
        "401":
          description: Unauthorized to access report
          schema:
            $ref: "#/definitions/ErrorResponse"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "405":
          description: Method Not Allowed
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "502":
          description: Bad Gateway
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: Service Unavailable
          schema:
            $ref: "#/definitions/ErrorResponse"
        "504":
          description: Gateway Timeout
          schema:
            $ref: "#/definitions/ErrorResponse"
        "408":
          description: Request Timedout
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw    
  
# complex objects have schema definitions        
definitions:
  NewTag: 
    type: object
    required:
      - name
    properties:
      name:
        type: string
      description:
        type: string

  NewParkingPolicy: 
    type: object
    required:
      - name
      - policyAuthorizerid
    properties:
      name:
        type: string
      policyAuthorizerid:
        type: string 
      timeZone:
        type: string
      tags:
        type: array
        items:
            type: string
      policyRule:
        type: array
        items:
         $ref: "#/definitions/PolicyRule"


  GroupPolicy:
    type: object
    required:
      - parkinggroupid
    properties:
      parkinggroupid:
        type: string

  ParkingSpotDetails:
    type: object
    required:
      - parkingspotid
      - formFactor
      - typeOfVehicle
    properties:
      parkingspotid:
        type: string
      name:
        type: string
      reservation:
        type: boolean
        default: false
      handicap:
        type: boolean
        default: false
      demarcated:
        type: boolean
        default: false
      geoCoordinates:
        $ref: "#/definitions/Rectangle"
      formFactor:
        type: string
      monitoringSensorid:
        type: string
      businessUse:
        type: string
      parkinggroupid:
        type: string
      typeOfVehicle:
        type: array
        items:
          type: string
      howMetered:
        type: string
      unDemarcatedNumSpots:
        type: number
      active:
        type: string
      PPV:
        type: boolean
        default: false
      areaType:
        type: array
        items:
          type: string
      paystationid:
        type: string
      currentStatus:
        type: number  
                     
  PostTagResponse:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      uid:
        type: string       
      orgid:
        type: string      
      siteid:
        type: string
      createdon:
        type: number
      lastupdated:
        type: number
      isdeleted:
        type: boolean
        default: false
    
  SearchParkingPolicy: 
    type: object
    properties:
      name:
        type: string
      tagid:
        type: string

  GetTagResponse:
    $ref: "#/definitions/PostTagResponse" 
  
  GetAllTagsResponse:
    $ref: "#/definitions/PostTagResponse" 
  
  UpdateTagResponse:
    $ref: "#/definitions/PostTagResponse" 

  DeleteTagResponse:
    type: object
    properties:
      success:
        type: boolean

  GetParkingPolicyResponse:
    type: object
    properties:
      uid:
        type: string
      policyAuthorizerid:
        type: string
      siteid:
        type: string
      orgid:
        type: string
      tags:
        type: array
        items:
            type: string
      isLibraryPolicy:
        type: boolean
      hashValue:
        type: string
      createdOn:
        type: number
      lastUpdated:
        type: number
      isDeleted:
        type: boolean
      version:
        type: number
      name:
        type: string
      description:
        type: string
      timeZone:
        type: string
      lastupdated:
        type: number
      policyRule:
        type: array
        items:
         $ref: "#/definitions/PolicyRule"

  PolicyRule:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      priority:
        type: number
      parkingSchedule:
        $ref: "#/definitions/ParkingSchedule"
      parkingRule:
         $ref: "#/definitions/ParkingRule"

  ParkingSchedule:
    type: object
    properties:
      description:
        type: string
      daysOfWeek:
        type: array
        items:
           type: string
      months:
        type: array
        items:
           type: string
      datePeriod:
        $ref: "#/definitions/DatePeriod"
      timeRange:
        type: array
        items:
          $ref: "#/definitions/TimeRange"
  
  DatePeriod:
    type: object
    properties:
      period:
        $ref: "#/definitions/Period"
      occurs:
        type: string
  
  Period:
    type: object
    properties:
      startDateTime:
        type: string
      endDateTime:
        type: string

  TimeRange:
    type: object
    properties:
      startTime:
        type: string
      endTime:
        type: string
  
  ParkingRule:
    type: object
    properties:
      description:
        type: string
      parkingAllowed:
        type: boolean
      parkingCharge:
        $ref: "#/definitions/ParkingCharge"
      parkingPenalty:
        $ref: "#/definitions/ParkingPenalty"

  ParkingCharge:
    type: object
    properties:
      description:
        type: string
      chargeDuration:
        type: array
        items:
          $ref: "#/definitions/ChargeDuration"
      maxDuration:
        $ref: "#/definitions/MaxDuration"
      maxCharge:
        type: number
        format: double

  ChargeDuration:
    type: object
    properties:
      coarseDuration:
        type: number
        format: double
      sliceDuration:
        type: number
        format: double
      units:
        type: string
      price:
        type: number
        format: double 

  MaxDuration:
    type: object
    properties:
      duration:
        type: number
        format: double
      units:
        type: string       

  ParkingPenalty:
    type: object
    required:
      - violationFine
    properties:
      description:
        type: string
      violationFine:
        type: array
        items:
           $ref: "#/definitions/ViolationFine"

  ViolationFine:
    type: object  
    properties:
      violationType:
        type: string
      violationFee:
        type: number
        format: double       
       

  CreateParkingPolicyResponse:
    $ref: "#/definitions/GetParkingPolicyResponse" 

  UpdateParkingPolicyResponse:
    $ref: "#/definitions/GetParkingPolicyResponse" 

  GetAllParkingPoliciesResponse:
    $ref: "#/definitions/GetParkingPolicyResponse" 
  
  DeleteParkingPolicyResponse:
    type: object
    properties:
      success:
        type: boolean

  AssociateGroupPolicyResponse:
    type: object
    properties:
      success:
        type: boolean

  DeassociateGroupPolicyResponse:
    type: object
    properties:
      success:
        type: boolean

  GetParkingPolicyResponseByVersion:
    $ref: "#/definitions/GetParkingPolicyResponse" 

  GetParkingPolicyResponseByVersionHistory:
    type: object
    properties:
      policyStartDateTime:
        type: string
      policyEndDateTime:
        type: string
      createdOn:
        type: number
        format: int64
      version:
        type: number
        format: int32

  GetParkingPolicyResponseByTimeline:
    $ref: "#/definitions/GetParkingPolicyResponse"

  GetActivePolicies:
    $ref: "#/definitions/GetParkingPolicyResponse"

  PostSearchResponse:
    $ref: "#/definitions/GetParkingPolicyResponse" 

  PostParkingSpotResponse:
    $ref: "#/definitions/GetAllParkingSpotsResponse"

  GetAllParkingSpotsResponse:
    type: object
    properties:
      parkingspotid:
        type: string
      name:
        type: string
      reservation:
        type: boolean
      handicap:
        type: boolean
      demarcated:
        type: boolean
      geoCoordinates:
        $ref: "#/definitions/Rectangle"
      formFactor:
        type: string
      monitoringSensorid:
        type: string
      businessUse:
        type: string
      parkinggroupid:
        type: string
      typeOfVehicle:
        type: array
        items:
          type: string
      howMetered:
        type: string
      unDemarcatedNumSpots:
        type: integer
        format: int32
      active:
        type: string
      PPV:
        type: boolean
      areaType:
        type: array
        items:
          type: string
      paystationid:
        type: string
      currentStatus:
        type: integer
        format: int32
      orgid:
        type: string
      siteid:
        type: string
      isDeleted:
        type: boolean

  Rectangle:
    type: object
    properties:
      upperLeftCorner:
        $ref: "#/definitions/GeoCoordinate"
      upperRightCorner:
        $ref: "#/definitions/GeoCoordinate"
      lowerLeftCorner:
        $ref: "#/definitions/GeoCoordinate"
      lowerRightCorner:
        $ref: "#/definitions/GeoCoordinate"

  GeoCoordinate:
    type: object
    properties:
      latitude:
        type: number
        format: double
      longitude:
        type: number
        format: double      

  GetParkingSpotResponse:
    $ref: "#/definitions/GetAllParkingSpotsResponse"

  UpdateParkingSpotResponse:
    $ref: "#/definitions/GetAllParkingSpotsResponse"

  DeleteParkingSpotResponse:
    type: object
    properties:
      success:
        type: boolean
    
  ErrorResponse:
    type: object
    properties:
      error:
        type: string
  #   #required:
  #   #  - message
    #  properties:
    #    message:
    #      type: string