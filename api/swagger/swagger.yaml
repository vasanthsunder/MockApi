swagger: "2.0"
info:
  version: "0.0.1"
  title: Sensity Interface Service
# during dev, should point to your local machine
host: 0.0.0.0:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /hello:
    # binds a127 app logic to a route
    x-swagger-router-controller: hello_world
    get:
      description: Returns 'Hello' to the caller
      # used as the method name of the controller
      operationId: hello
      parameters:
        - name: name
          in: query
          description: The name of the person to whom to say hello
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  # Get, Update, Delete  a specific policy category
  /customers/{orgid}/sites/{siteid}/policycategories/{policycategoryid}:
    x-swagger-router-controller: policy_category
    # Get a policy category
    get:
      description: Get a specific policy category in a site
      operationId: getPolicyCategory
      parameters:
        - name: orgid
          in: path
          description: The org ID
          required: true
          type: string
        - name: siteid
          in: path
          description: The site ID
          required: true
          type: string
        - name: policycategoryid
          in: path
          description: The policy category ID
          required: true
          type: string        
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GetPolicyCategoryResponse"
        "404":
          description: Policy Category Not Found
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    # Delete a policy category
    delete:
      description: Delete a policy category in a site
      operationId: deletePolicyCategory
      parameters:
        - name: orgid
          in: path
          description: The customer ID
          required: true
          type: string
        - name: siteid
          in: path
          description: The site ID
          required: true
          type: string
        - name: policycategoryid
          in: path
          description: The policy category ID
          required: true
          type: string
      responses:
        "204":
          description: Success
          schema:
            $ref: "#/definitions/GetPolicyCategoryResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    
    # Update a policy category
    post:
      description: Update a policy category
      operationId: updatePolicyCategory
      parameters:
        - name: orgid
          in: path
          description: The customer ID
          required: true
          type: string
        - name: siteid
          in: path
          description: The site ID
          required: true
          type: string
        - name: policycategoryid
          in: path
          description: The policy category ID
          required: true
          type: string
        - name: policycategory
          in: body
          description: Updated a policy category
          required: true
          schema:
            $ref: "#/definitions/NewPolicyCategory"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UpdatePolicyCategoryResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  # Create, get all Policy category in a site
  /customers/{orgid}/sites/{siteid}/policycategories:
    x-swagger-router-controller: policy_category

    # Create a policy category
    post:
      description: Create a policy category in a site
      operationId: createPolicyCategory
      parameters:
        - name: orgid
          in: path
          description: The org ID
          required: true
          type: string
        - name: siteid
          in: path
          description: The site ID
          required: true
          type: string
        - name: policycategory
          in: body
          description: New Policy Category Details
          required: true
          schema:
            $ref: "#/definitions/NewPolicyCategory"
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/CreatePolicyCategoryResponse"
        "404":
          description: Policy Category Not Created
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"          
    
    # Get all policy categories
    get:
      description: Get all policy categories in a site
      operationId: getAllPolicyCategories
      parameters:
        - name: orgid
          in: path
          description: The org ID
          required: true
          type: string
        - name: siteid
          in: path
          description: The site ID
          required: true
          type: string              
      responses:
        "200":
          description: Success
          schema:
            type: array
            items: 
              # a pointer to a definition
              $ref: "#/definitions/GetAllPolicyCategoriesResponse"
        "404":
          description: Policy Categories Not Found
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"  

   # Get, Update, Delete  a specific parking policy
  /customers/{orgid}/sites/{siteid}/parkingpolicies/{parkingpolicyid}:
    x-swagger-router-controller: parking_policy
    # Get a parking policy 
    get:
      description: Get a specific parking policy in a site
      operationId: getParkingPolicy
      parameters:
        - name: orgid
          in: path
          description: The org ID
          required: true
          type: string
        - name: siteid
          in: path
          description: The site ID
          required: true
          type: string
        - name: parkingpolicyid
          in: path
          description: The parking policy ID
          required: true
          type: string        
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GetParkingPolicyResponse"
        "404":
          description: Parking Policy Not Found
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse" 

    # Delete a policy category
    delete:
      description: Delete a parking policy in a site
      operationId: deleteParkingPolicy
      parameters:
        - name: orgid
          in: path
          description: The customer ID
          required: true
          type: string
        - name: siteid
          in: path
          description: The site ID
          required: true
          type: string
        - name: parkingpolicyid
          in: path
          description: The parking policy ID
          required: true
          type: string
      responses:
        "204":
          description: Success
          schema:
            $ref: "#/definitions/GetParkingPolicyResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse" 

    # Update a parking policy
    post:
      description: Update a parking policy
      operationId: updateParkingPolicy
      parameters:
        - name: orgid
          in: path
          description: The customer ID
          required: true
          type: string
        - name: siteid
          in: path
          description: The site ID
          required: true
          type: string
        - name: parkingpolicyid
          in: path
          description: The parking policy ID
          required: true
          type: string
        - name: policy
          in: body
          description: Updated a parking policy
          required: true
          schema:
            $ref: "#/definitions/NewParkingPolicy"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UpdateParkingPolicyResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

   # Create, get all parking Policy in a site
  /customers/{orgid}/sites/{siteid}/parkingpolicies:
    x-swagger-router-controller: parking_policy

    # Create a parking policy
    post:
      description: Create a parking policy in a site
      operationId: createParkingPolicy
      parameters:
        - name: orgid
          in: path
          description: The org ID
          required: true
          type: string
        - name: siteid
          in: path
          description: The site ID
          required: true
          type: string
        - name: policy
          in: body
          description: New Parking Policy Details
          required: true
          schema:
            $ref: "#/definitions/NewParkingPolicy"
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/CreateParkingPolicyResponse"
        "404":
          description: Policy Category Not Created
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    # Get all policy categories
    get:
      description: Get all parking policies in a site
      operationId: getAllParkingPolicy
      parameters:
        - name: orgid
          in: path
          description: The org ID
          required: true
          type: string
        - name: siteid
          in: path
          description: The site ID
          required: true
          type: string              
      responses:
        "200":
          description: Success
          schema:
            type: array
            items: 
              # a pointer to a definition
              $ref: "#/definitions/GetAllParkingPoliciesResponse"
        "404":
          description: Parking Policy Not Found
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"  
  /swagger:
    x-swagger-pipe: swagger_raw    
  
# complex objects have schema definitions
definitions:
  HelloWorldResponse:
    required:
      - message
    properties:
      message:
        type: string
        
  NewPolicyCategory: 
    type: object
    required:
      - name
      - description
    properties:
      name:
        type: string
      description:
        type: string
      uid:
        type: string
        default: 'null'
      orgid:
        type: string
        default: 'null'
      siteid:
        type: string
        default: 'null'
      createdon:
        default: null
      lastupdated:
        default: null
      isdeleted:
        default: null

  NewParkingPolicy: 
    type: object
 
  CreatePolicyCategoryResponse:
    type: object

  GetPolicyCategoryResponse:
    type: object    
  
  GetAllPolicyCategoriesResponse:
    type: object
  
  UpdatePolicyCategoryResponse:
    type: object

  GetParkingPolicyResponse:
    type: object

  CreateParkingPolicyResponse:
    type: object

  UpdateParkingPolicyResponse:
    type: object

  GetAllParkingPoliciesResponse:
    type: object

  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
